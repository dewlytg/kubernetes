apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  labels:
    role: myrole
spec:
  volumes:
  - name: nginxhome
    persistentVolumeClaim:
      claimName: my-pod-data
  containers:
    - name: web
      image: nginx
      lifecycle:
        postStart:
          exec:
            command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
            command: ["/bin/sh", "-c", "touch /tmp/healthy"]
        preStop:
          exec:
            command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
      ports:
        - name: web
          containerPort: 80
          protocol: TCP
      #readinessProbe:
      #  tcpSocket:
      #    port: 80
      #  initialDelaySeconds: 5
      #  periodSeconds: 10
      #livenessProbe:
      #  tcpSocket:
      #    port: 80
      #  initialDelaySeconds: 15
      #  periodSeconds: 20
      livenessProbe:
        httpGet:
          path: /index.html
          port: 80
        failureThreshold: 1
        periodSeconds: 10
      volumeMounts:
      - name: nginxhome
        mountPath: /usr/share/nginx/html
      readinessProbe:
        exec:
          command:
          - cat
          - /tmp/healthy
        initialDelaySeconds: 5
        periodSeconds: 5
  initContainers:
  - name: init-myservice
    image: busybox:1.28
    command: ['sh', '-c', "echo 'my pod test index v1' > /var/www/index.html"]
    volumeMounts:
    - name: nginxhome
      mountPath: /var/www
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-pod-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-client
  resources:
    requests:
      storage: 2Gi
